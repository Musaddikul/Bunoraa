# Generated by Django 5.2.1 on 2025-07-18 04:55

import django.core.validators
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("promotions", "0001_initial"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="coupon",
            options={
                "ordering": ["-created_at"],
                "verbose_name": "Coupon",
                "verbose_name_plural": "Coupons",
            },
        ),
        migrations.RemoveField(
            model_name="coupon",
            name="active",
        ),
        migrations.RemoveField(
            model_name="coupon",
            name="type",
        ),
        migrations.RemoveField(
            model_name="coupon",
            name="users_used",
        ),
        migrations.RemoveField(
            model_name="coupon",
            name="valid_to",
        ),
        migrations.AddField(
            model_name="coupon",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Internal description of the coupon's purpose.",
                verbose_name="Description",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="discount_type",
            field=models.CharField(
                choices=[("percent", "Percentage"), ("fixed", "Fixed Amount")],
                default="fixed",
                max_length=10,
                verbose_name="Discount Type",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="is_active",
            field=models.BooleanField(
                default=True,
                help_text="Whether the coupon is currently active and can be used.",
                verbose_name="Is Active",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="maximum_amount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Maximum discount amount that can be applied by this coupon (for percentage coupons).",
                max_digits=10,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Maximum Discount Amount",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="minimum_order_amount",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Minimum order total required to apply this coupon.",
                max_digits=10,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Minimum Order Amount",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="usage_limit_per_user",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Maximum number of times a single user can use this coupon.",
                null=True,
                verbose_name="Usage Limit Per User",
            ),
        ),
        migrations.AddField(
            model_name="coupon",
            name="valid_until",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="The date and time until which the coupon is valid (leave blank for no expiry).",
                verbose_name="Valid Until",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="code",
            field=models.CharField(
                help_text="Unique code for the coupon (e.g., 'SAVE10', 'FREESHIP').",
                max_length=50,
                unique=True,
                verbose_name="Coupon Code",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="created_at",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="Created At"
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="discount_value",
            field=models.DecimalField(
                decimal_places=2,
                help_text="The value of the discount (e.g., 10 for 10% or $10).",
                max_digits=10,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Discount Value",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, verbose_name="Updated At"),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="usage_limit",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Maximum number of times this coupon can be used across all users.",
                null=True,
                verbose_name="Total Usage Limit",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="used_count",
            field=models.PositiveIntegerField(
                default=0,
                help_text="The current number of times this coupon has been successfully used.",
                verbose_name="Times Used",
            ),
        ),
        migrations.AlterField(
            model_name="coupon",
            name="valid_from",
            field=models.DateTimeField(
                default=django.utils.timezone.now,
                help_text="The date and time from which the coupon is valid.",
                verbose_name="Valid From",
            ),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(fields=["code"], name="promotions__code_acae7b_idx"),
        ),
        migrations.AddIndex(
            model_name="coupon",
            index=models.Index(
                fields=["is_active", "valid_from", "valid_until"],
                name="promotions__is_acti_c370cf_idx",
            ),
        ),
    ]
