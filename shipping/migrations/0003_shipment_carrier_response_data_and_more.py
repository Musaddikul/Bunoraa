# Generated by Django 5.2.1 on 2025-07-18 04:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("shipping", "0002_alter_shippingmethod_unique_together_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="shipment",
            name="carrier_response_data",
            field=models.JSONField(
                blank=True,
                help_text="Raw JSON response from the carrier's API for booking/tracking.",
                null=True,
                verbose_name="Carrier API Response Data",
            ),
        ),
        migrations.AddField(
            model_name="shipment",
            name="delivery_proof_url",
            field=models.URLField(
                blank=True,
                help_text="URL to image/document proving delivery.",
                verbose_name="Delivery Proof URL",
            ),
        ),
        migrations.AddField(
            model_name="shipment",
            name="delivery_signature_url",
            field=models.URLField(
                blank=True,
                help_text="URL to image of recipient's signature.",
                verbose_name="Delivery Signature URL",
            ),
        ),
        migrations.AddField(
            model_name="shipment",
            name="tracking_url_generated",
            field=models.URLField(
                blank=True,
                help_text="The actual tracking URL generated by the carrier's API.",
                verbose_name="Generated Tracking URL",
            ),
        ),
        migrations.AddField(
            model_name="shippingcarrier",
            name="api_base_url",
            field=models.URLField(
                blank=True,
                help_text="Base URL for the carrier's API (e.g., https://api.carrier.com/v1)",
                verbose_name="API Base URL",
            ),
        ),
        migrations.AddField(
            model_name="shippingcarrier",
            name="auth_type",
            field=models.CharField(
                choices=[
                    ("NONE", "None"),
                    ("API_KEY", "API Key"),
                    ("OAUTH2", "OAuth 2.0"),
                    ("BASIC", "Basic Auth"),
                ],
                default="NONE",
                max_length=10,
                verbose_name="Authentication Type",
            ),
        ),
        migrations.AddField(
            model_name="shippingcarrier",
            name="credentials_json",
            field=models.JSONField(
                blank=True,
                help_text="Additional API credentials in JSON format (e.g., {'client_id': '...', 'client_secret': '...'}). Store securely.",
                null=True,
                verbose_name="API Credentials (JSON)",
            ),
        ),
        migrations.AddField(
            model_name="shippingcarrier",
            name="return_api_url",
            field=models.URLField(
                blank=True,
                help_text="API endpoint for initiating returns with this carrier.",
                verbose_name="Return API URL",
            ),
        ),
        migrations.AddField(
            model_name="shippingcarrier",
            name="webhook_secret",
            field=models.CharField(
                blank=True,
                help_text="Secret key for verifying incoming webhooks from this carrier.",
                max_length=255,
                verbose_name="Webhook Secret",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="guaranteed_delivery_days",
            field=models.CharField(
                blank=True,
                help_text="e.g., '2 business days' for guaranteed delivery services",
                max_length=50,
                verbose_name="Guaranteed Delivery Days",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="max_dims_cm",
            field=models.JSONField(
                blank=True,
                help_text="JSON object: {'l': length, 'w': width, 'h': height}. Max dimensions for this method.",
                null=True,
                verbose_name="Maximum Dimensions (cm)",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="max_weight_kg",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Maximum weight for this shipping method",
                max_digits=6,
                null=True,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Maximum Weight (kg)",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="min_dims_cm",
            field=models.JSONField(
                blank=True,
                help_text="JSON object: {'l': length, 'w': width, 'h': height}. Min dimensions for this method.",
                null=True,
                verbose_name="Minimum Dimensions (cm)",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="min_weight_kg",
            field=models.DecimalField(
                decimal_places=2,
                default=Decimal("0.00"),
                help_text="Minimum weight for this shipping method",
                max_digits=6,
                validators=[django.core.validators.MinValueValidator(Decimal("0.00"))],
                verbose_name="Minimum Weight (kg)",
            ),
        ),
        migrations.AddField(
            model_name="shippingmethod",
            name="service_code",
            field=models.CharField(
                blank=True,
                help_text="Carrier-specific code for this service (e.g., 'PRIORITY_OVERNIGHT')",
                max_length=100,
                verbose_name="Carrier Service Code",
            ),
        ),
        migrations.AddField(
            model_name="shippingzone",
            name="postal_codes",
            field=models.JSONField(
                blank=True,
                help_text="JSON array of postal codes or ranges (e.g., ['1200', '1205-1210'])",
                null=True,
                verbose_name="Applicable Postal Codes",
            ),
        ),
        migrations.AlterField(
            model_name="shipment",
            name="status",
            field=models.CharField(
                choices=[
                    ("PENDING", "Pending"),
                    ("BOOKED", "Booked"),
                    ("IN_TRANSIT", "In Transit"),
                    ("OUT_FOR_DELIVERY", "Out For Delivery"),
                    ("DELIVERED", "Delivered"),
                    ("CANCELLED", "Cancelled"),
                    ("FAILED", "Failed"),
                    ("RETURNED", "Returned"),
                ],
                default="PENDING",
                max_length=20,
                verbose_name="Status",
            ),
        ),
        migrations.AlterField(
            model_name="shippingcarrier",
            name="api_key",
            field=models.CharField(
                blank=True,
                help_text="API key for integration with carrier's system (if API_KEY auth)",
                max_length=255,
                verbose_name="API Key",
            ),
        ),
        migrations.AlterField(
            model_name="shippingcarrier",
            name="tracking_url",
            field=models.URLField(
                blank=True,
                help_text="URL template for tracking shipments (e.g., https://carrier.com/track/{tracking_number})",
                verbose_name="Tracking URL Template",
            ),
        ),
        migrations.AlterField(
            model_name="shippingmethod",
            name="zones",
            field=models.ManyToManyField(
                help_text="The shipping zones where this method is available.",
                related_name="shipping_methods",
                to="shipping.shippingzone",
                verbose_name="Applicable Zones",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="shippingmethod",
            unique_together={("name", "carrier")},
        ),
        migrations.CreateModel(
            name="ShipmentEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        help_text="e.g., 'SCAN', 'EXCEPTION', 'DELIVERY_ATTEMPT'",
                        max_length=100,
                        verbose_name="Event Type",
                    ),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Location"
                    ),
                ),
                (
                    "event_timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="Event Timestamp",
                    ),
                ),
                (
                    "carrier_raw_data",
                    models.JSONField(
                        blank=True,
                        help_text="Raw JSON data from the carrier's webhook/API for this event.",
                        null=True,
                        verbose_name="Carrier Raw Event Data",
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="shipping.shipment",
                        verbose_name="Shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shipment Event",
                "verbose_name_plural": "Shipment Events",
                "ordering": ["-event_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ShipmentStatusUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "old_status",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="Old Status"
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("BOOKED", "Booked"),
                            ("IN_TRANSIT", "In Transit"),
                            ("OUT_FOR_DELIVERY", "Out For Delivery"),
                            ("DELIVERED", "Delivered"),
                            ("CANCELLED", "Cancelled"),
                            ("FAILED", "Failed"),
                            ("RETURNED", "Returned"),
                        ],
                        max_length=20,
                        verbose_name="New Status",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Created At"
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="status_updates",
                        to="shipping.shipment",
                        verbose_name="Shipment",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shipment Status Update",
                "verbose_name_plural": "Shipment Status Updates",
                "ordering": ["-created_at"],
            },
        ),
    ]
