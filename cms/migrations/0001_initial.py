# Generated by Django 5.2.1 on 2025-07-13 05:18

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="SiteSetting",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.JSONField()),
                ("description", models.CharField(blank=True, max_length=200)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["key"],
            },
        ),
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("image", models.ImageField(upload_to="cms/banners/")),
                ("alt_text", models.CharField(blank=True, max_length=150)),
                ("link", models.URLField(blank=True, null=True)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("order", models.PositiveIntegerField(default=0)),
                (
                    "target_groups",
                    models.JSONField(
                        blank=True,
                        help_text="e.g. {'segment':'vip','min_orders':5}",
                        null=True,
                    ),
                ),
                (
                    "ab_variant",
                    models.CharField(
                        choices=[("A", "A"), ("B", "B")], default="A", max_length=10
                    ),
                ),
                (
                    "ab_weight",
                    models.PositiveSmallIntegerField(
                        default=50, help_text="Percentage weight for A/B test"
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["order", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["is_active", "start_date", "end_date"],
                        name="cms_banner_is_acti_6a6e72_idx",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=150, unique=True)),
                ("title", models.CharField(max_length=200)),
                ("subtitle", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField(help_text="Rich HTML or markdown")),
                (
                    "template_name",
                    models.CharField(default="cms/page_detail.html", max_length=100),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=10,
                    ),
                ),
                (
                    "publish_date",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("expire_date", models.DateTimeField(blank=True, null=True)),
                ("meta_title", models.CharField(blank=True, max_length=70)),
                ("meta_description", models.CharField(blank=True, max_length=160)),
                ("language", models.CharField(default="en", max_length=10)),
                ("enable_comments", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-publish_date"],
            },
        ),
        migrations.CreateModel(
            name="ContentBlock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "identifier",
                    models.CharField(
                        help_text="Used in template to place this block", max_length=50
                    ),
                ),
                (
                    "block_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("html", "Raw HTML"),
                            ("image", "Image"),
                            ("component", "Component"),
                            ("code", "Code Snippet"),
                        ],
                        default="text",
                        max_length=10,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "settings",
                    models.JSONField(
                        blank=True,
                        help_text="Block-specific options, e.g. {'align':'center'}",
                        null=True,
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocks",
                        to="cms.page",
                    ),
                ),
            ],
            options={
                "ordering": ["order"],
            },
        ),
        migrations.AddIndex(
            model_name="page",
            index=models.Index(
                fields=["slug", "status"], name="cms_page_slug_28f1ee_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="page",
            index=models.Index(
                fields=["status", "publish_date"], name="cms_page_status_bd92fd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="contentblock",
            unique_together={("page", "identifier")},
        ),
    ]
